 html,
 body {
     margin: 0;
     padding: 0;
     font-family: 'Roboto', sans-serif;
     background-color: #fffef9;
     height: 100vh;
     /* Changed to 100vh for full viewport height */
     color: #2c2c2c;
     /* Ensure text color is defined */
 }

 /* サイドバーのスタイル */
 .sidebar {
     position: fixed;
     /* 固定表示 */
     top: 0;
     left: 0;
     width: 160px;
     /* 固定幅 */
     height: 100vh;
     /* 画面いっぱいの高さ */
     background-color: #fff3e0;
     /* 淡いオレンジの背景色 (ご提供のデザインから採用) */
     padding-top: 2rem;
     box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
     display: flex;
     flex-direction: column;
     /* ボタンを縦に並べる */
     align-items: center;
     /* ボタンを中央に配置 */
     z-index: 999;
 }


 /* サイドバーのボタンのスタイル */
 .sidebar button {
     width: 120px;
     /* ボタンの固定幅 */
     margin: 0.5rem 0;
     /* 上下のマージン */
     padding: 0.5rem;
     font-size: 0.95rem;
     background-color: #fb8500;
     /* 濃いオレンジ */
     color: white;
     border: none;
     border-radius: 6px;
     cursor: pointer;
     transition: background-color 0.3s ease;
     /* ホバー効果 */
     text-align: center;
     /* テキスト中央寄せ */
 }

 .sidebar button:hover {
     background-color: #d95d0c;
     /* ホバー時の暗いオレンジ */
 }

 /* アクティブなボタンのスタイル */
 .sidebar button .active-link {
     /* active-link クラスを適用 */
     background-color: #ffb703;
     /* アクセントカラー */
     color: #2c2c2c;
     /* アクセントカラー上のテキスト色 */
     font-weight: bold;
 }

 /* CSS スタイル */
 .weather-forecast {
     /* 変更点: position を fixed にし、top と right を指定 */
     position: fixed;
     /* 画面に対して位置を固定 */
     top: 20px;
     /* 上端からの距離 */
     right: 20px;
     /* 右端からの距離 */

     display: inline-block;
     /* アイコンのサイズに合わせる */
     cursor: pointer;
     z-index: 1000;
     /* 他の要素の上に表示されるように高めのz-indexを設定 */
 }

 .weather-icon {
     font-size: 1.8rem;
     padding: 5px;
     background-color: #f0f0f0;
     border-radius: 50%;
     width: 40px;
     height: 40px;
     display: flex;
     justify-content: center;
     align-items: center;
     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
 }

 .weather-popup {
     display: none;
     position: absolute;
     /* 親要素 (.weather-forecast) に対して相対的な位置 */
     top: 50px;
     /* アイコンの下に表示されるように調整 */
     right: 0;
     /* 親要素の右端に合わせる */
     background-color: #fff;
     border: 1px solid #ddd;
     border-radius: 8px;
     box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
     padding: 15px;
     width: 250px;
     /* ポップアップの幅 */
     z-index: 1001;
     overflow: hidden;
 }

 .weather-popup .weather-content-wrapper {
     display: flex;
     width: auto;
     /* 子要素がflex-basisで幅を持つためautoでOK */
     transition: transform 0.5s ease-in-out;
 }

 .weather-popup .weather-day-content {
     flex: 0 0 250px;
     /* 各日をポップアップの幅250pxにする */
     box-sizing: border-box;
     text-align: center;
     padding: 0 10px;
 }

 .weather-popup .weather-day-content strong {
     color: #fb8500;
     font-size: 1.2rem;
     display: block;
     margin-bottom: 5px;
 }

 .weather-popup .weather-day-content span {
     display: block;
     font-size: 0.9rem;
     color: #777;
     margin-top: 5px;
 }

 .weather-popup .controls {
     display: flex;
     justify-content: space-between;
     margin-top: 10px;
 }

 .weather-popup .controls button {
     background-color: #fb8500;
     color: white;
     border: none;
     border-radius: 5px;
     padding: 8px 15px;
     cursor: pointer;
     transition: background-color 0.3s ease;
 }

 .weather-popup .controls button:hover {
     background-color: #d95d0c;
 }

 /* ローディング表示用のCSS（今回は使わないが残しておく） */
 .weather-loading {
     text-align: center;
     padding: 20px;
 }

 .weather-spinner {
     border: 4px solid #f3f3f3;
     border-top: 4px solid #fb8500;
     border-radius: 50%;
     width: 20px;
     height: 20px;
     animation: spin 1s linear infinite;
     margin: 0 auto 10px;
 }

 @keyframes spin {
     0% {
         transform: rotate(0deg);
     }

     100% {
         transform: rotate(360deg);
     }
 }